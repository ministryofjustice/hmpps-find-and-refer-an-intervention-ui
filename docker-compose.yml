version: '3.1'
services:

  postgres:
    image: postgres:16
    container_name: postgres
    networks:
      - hmpps
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dev
    volumes:
      - ./testutils/docker/postgres:/docker-entrypoint-initdb.d:ro

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    ports:
      - "9090:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev,delius,local-postgres
      - DELIUS_ENDPOINT_URL=http://wiremock:8080/delius
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/auth-db
      - APPLICATION_AUTHENTICATION_UI_ALLOWLIST=0.0.0.0/0

  auth-db:
    image: postgres:15
    networks:
      - hmpps
    container_name: auth-db
    restart: always
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_PASSWORD=admin_password
      - POSTGRES_USER=admin
      - POSTGRES_DB=auth-db
    healthcheck:
      test: pg_isready -d auth-db

  find-and-refer-interventions-service:
    image: quay.io/hmpps/hmpps-find-and-refer-an-intervention-service
    restart: always
    networks:
      - hmpps
    container_name: find-and-refer-interventions-service
    depends_on:
      - postgres
    ports:
      - '8092:8080'
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - POSTGRES_URI=postgres:5432

  wiremock:
    image: wiremock/wiremock
    networks:
      - hmpps
    restart: always
    ports:
      - "9092:8080"
    volumes:
      - ./wiremock_mappings:/home/wiremock/mappings
    command: '--verbose'

networks:
  hmpps:
